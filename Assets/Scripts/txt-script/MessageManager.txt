using UnityEngine;
using UnityEngine.UI;

public class MessageManager : MonoBehaviour
{
    // Ссылка на текстовое поле для уведомлений
    public Text notificationText;

    // Экземпляр для работы с Singleton
    private static MessageManager _instance;

    // Публичный доступ к экземпляру
    public static MessageManager Instance
    {
        get
        {
            if (_instance == null)
            {
                Debug.LogError("MessageManager не найден в сцене!");
            }
            return _instance;
        }
    }

    // Метод, вызываемый при старте игры
    void Awake()
    {
        // Инициализация Singleton
        if (_instance == null)
        {
            _instance = this;
        }
        else
        {
            Destroy(gameObject);
        }

        // Скрываем уведомления при старте
        if (notificationText != null)
        {
            notificationText.gameObject.SetActive(false);
        }
    }

    // Метод для показа уведомлений
    public void ShowMessage(string message, Color color)
    {
        if (notificationText != null)
        {
            notificationText.text = message;
            notificationText.color = color;
            notificationText.gameObject.SetActive(true);

            // Скрываем уведомление через 2 секунды
            Invoke(nameof(HideMessage), 2f);
        }
    }

    // Метод для скрытия уведомлений
    private void HideMessage()
    {
        if (notificationText != null)
        {
            notificationText.gameObject.SetActive(false);
        }
    }
}